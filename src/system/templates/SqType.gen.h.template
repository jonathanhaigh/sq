/* -----------------------------------------------------------------------------
 * Copyright 2021 Jonathan Haigh
 * SPDX-License-Identifier: MIT
 * ---------------------------------------------------------------------------*/
#ifndef SQ_INCLUDE_GUARD_system_{{= name }}_gen_h_
#define SQ_INCLUDE_GUARD_system_{{= name }}_gen_h_

#include "common_types/Field.h"

namespace sq::system {

/**
 * Dispatches field accesses for this system object to an implementation
 * subclass using the CRTP.
 */
template <typename Impl>
class {{= name }}
    : public Field
{
public:
    /**
     * Dispatch a field access to an implementation subclass.
     *
     * I.e. something like calling:
     *       derived_implementation_object->get_[member](params)
     */
    [[nodiscard]] Result get(std::string_view member, const FieldCallParams& params) const override;
};

} // namespace sq::system

#include "system/{{= name }}.gen.inl.h"

#endif // SQ_INCLUDE_GUARD_system_{{= name }}_gen_h_
